plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.example.gradleofflinedemo.GradleOfflineDemoApplication'
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    if (offlineMode) {
//        implementation fileTree(dir: 'libs', include: ['*.jar'])
//
//        annotationProcessor files('libs/lombok-1.18.32.jar')
//        testImplementation files('libs/spring-boot-starter-test-3.4.1.jar')
//        testRuntimeOnly files('libs/junit-platform-launcher-1.10.2')
//    } else {
//
//    }
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // gradle plugin
    // - search link: https://plugins.gradle.org/search
//    implementation("org.springframework.boot:org.springframework.boot.gradle.plugin:3.4.1")
//    implementation("io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:1.1.7")

    // dev dependencies
    implementation 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    implementation 'org.springframework.boot:spring-boot-starter-test:3.4.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-test:3.4.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

//tasks.register('copyDependencies', Copy) {
//    from configurations.runtimeClasspath
//    into "libs" // JAR 파일을 복사할 디렉터리
//}
